
CSS2.1 作为 CSS2 和 CSS1 的后序版本，基于一下一组设计理念：

向前和向后兼容。CSS2.1 的用户代理能够理解 CSS1 的样式表。 CSS1 的用户代理能够读取 CSS2.1 的样式表，并且丢弃他们不能理解的部分。同时，对于不支持 CSS 的用户代理可以显示样式增强的文档。当然通过 CSS 增强的样式将不被渲染，但所有的内容可以被表现。
作为结构化文档的补充。样式表补充结构化文档（例如，HTML 和 XML应用程序），为标记文本提供样式信息。样式表应该非常容易修改，并对标记的影像甚微或没有。
供应商，平台和设备无关。样式表使文档保持供应商，平台和设备无关。样式表本身也是供应商和平台无关的，但CSS2.1允许你为一组设备指定一个样式表（例如，打印机）。
可维护性。通过在文档中指向样式表，网站管理员能简化站点的维护和保持整个站点的一致外观和感觉。例如，如果组织的背景色发生改变，仅需更改一个文件。
简单。CSS 是一门简单的样式语言，是对人类读写友好的。CSS的属性保持最大程度上的相互独立，一般实现一个效果只有一种方法。
网络性能。CSS为内容的呈现方式提供了紧凑的编码。图片或音频文件常被作者用来实现某种特定的渲染效果，样式表和其比起来体积要小的多。同时，减少网络链接的次数，进一步提高网络性能。
灵活性。有几种方法可以将CSS应用到内容。关键特征是不同位置的样式信息能够层叠，包括默认（用户代理）样式表，用户样式表，链接样式表，内嵌样式，和元素属性中的样式信息。渴求的某些渲染效果和设备无关相冲突，但CSS2.1
丰富的。为作者提供一组丰富的渲染效果，增加网站作为表达媒介的丰富性。设计师们已经对桌面版和幻灯片应用中的常见功能渴望许久。但 CSS2.1 为满足设计师的要求，向前迈了一大步。
可选的语言绑定。规范中描述的一组 CSS 属性使视觉和听觉格式化模型表现一致。其格式化模型可以通过CSS语言访问，但也可以绑定到其他语言。例如，在JavaScript程序中可以动态改变某个元素的‘color’属性值。
可访问性。一些CSS功能将使网络更方便残障用户：
控制字体外观属性允许作者消除不可访问的文图图片。
位置属性允许作者消除强制布局的标记技巧（例如，不可见图片）。
!improtan 规则的意义在于有特别演示要求的用户可以覆盖作者的样式表。
所有属性的‘inherit’值用来提升层叠的通用性，和更容易生成一致的风格。
改进媒体支持，包括媒体分组和 braille，embossed，和 tty 媒体类型，允许用户或作者为这些设备定制页面。
via:yanhaijing
